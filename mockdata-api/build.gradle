import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
	id "io.freefair.lombok" version "8.11"
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

dependencies {
	implementation project(':mockdata')
	implementation project(':postgres')
	implementation project(':kafka')

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


task bootRunAPI(type: BootRun, dependsOn: 'build') {
	group = 'Application'
	classpath = sourceSets.main.runtimeClasspath
	mainClass = project.mainClassName

	doFirst() {
		if ("postgres" == project.runtimeMode) {
			systemProperty 'spring.profiles.active', "postgres"
		} else if ("kafka" == project.runtimeMode) {
			systemProperty 'spring.profiles.active', "kafka"
		} else if ("kafka-cloud" == project.runtimeMode) {
			systemProperty 'spring.profiles.active', "kafka,ccloud"
		}

		// configure tracing properties if enabled
		if ("true" == project.tracingEnabled) {
			systemProperty "otel.traces.exporter", 'otlp'
			systemProperty "otel.exporter.otlp.protocol", 'grpc'
			systemProperty "otel.exporter.otlp.endpoint", 'http://localhost:4317'
			systemProperty "otel.resource.attributes", 'service.name=data-demo'
			systemProperty "otel.logs.exporter", 'none'
			systemProperty "otel.metrics.exporter", 'none'

			jvmArgs = ["-javaagent:../observability/opentelemetry-javaagent_1.25.0.jar"]
		}
	}
}
