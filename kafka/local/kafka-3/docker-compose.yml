networks:
  default:
    external: true
    name: dev-local

volumes:
  bk1: {}
  bk1_secrets: {}
  bk2: {}
  bk2_secrets: {}
  bk3: {}
  bk3_secrets: {}
  sr_secrets: {}
  c1_kafka_data: {}
  c1_kafka_secrets: {}
  c1_secrets: {}

services:
  broker-1:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: broker-1
    container_name: broker-1
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      # this is correct, this allows for external host to discover
      # correct listener that is accessible from the localhost.
      - '9092:19092'
      - '19092:19092'
    volumes:
      - bk1:/var/lib/kafka/data
      - bk1_secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: INT://:9092,EXT://:19092,CTRL://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CTRL:PLAINTEXT,INT:PLAINTEXT,EXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INT://broker-1:9092,EXT://localhost:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: INT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker-1:9093,2@broker-2:9093,3@broker-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CTRL
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS:
      CONFLUENT_METRICS_ENABLE:
  broker-2:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: broker-2
    container_name: broker-2
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      - '29092:29092'
    volumes:
      - bk2:/var/lib/kafka/data
      - bk2_secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: INT://:9092,EXT://:29092,CTRL://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CTRL:PLAINTEXT,INT:PLAINTEXT,EXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INT://broker-2:9092,EXT://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker-1:9093,2@broker-2:9093,3@broker-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CTRL
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS:
      CONFLUENT_METRICS_ENABLE:
  broker-3:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: broker-3
    container_name: broker-3
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      - '39092:39092'
    volumes:
      - bk3:/var/lib/kafka/data
      - bk3_secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: INT://:9092,EXT://:39092,CTRL://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CTRL:PLAINTEXT,INT:PLAINTEXT,EXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INT://broker-3:9092,EXT://localhost:39092
      KAFKA_INTER_BROKER_LISTENER_NAME: INT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker-1:9093,2@broker-2:9093,3@broker-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CTRL
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS:
      CONFLUENT_METRICS_ENABLE:

  schema-registry:
    image: confluentinc/cp-schema-registry:${VERSION}
    hostname: schema-registry
    container_name: schema-registry
    stop_grace_period: 120s
    healthcheck:
      test: curl --fail http://localhost:8081/ || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      - '8081:8081'
    volumes:
      - sr_secrets:/etc/schema-registry/secrets
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      KAFKA_METRIC_REPORTERS:
      CONFLUENT_METRICS_ENABLE: 'false'
      EXTRA_OPTS:
      SCHEMA_REGISTRY_OPTS:

  connect-1:
    image: confluentinc/cp-kafka-connect:${VERSION}
    hostname: connect-1
    container_name: connect-1
    ports:
      - "18083:8083"
    healthcheck:
      test: curl --fail http://localhost:8083/connector-plugins || exit 1
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 15s
    volumes:
      - c1_kafka_data:/var/lib/kafka/data
      - c1_kafka_secrets:/etc/kafka/secrets
      - c1_secrets:/etc/kafka-connect/secrets
      - ./connect-plugins:/etc/kafka-connect/jars
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect-cluster'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-cluster-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-cluster-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-cluster-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_PROVIDERS: file
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: 'org.apache.kafka.common.config.provider.FileConfigProvider'
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'connect-1'
      CONNECT_PLUGIN_PATH: /etc/kafka-connect/jars
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_OPTS:

#  kpow:
#    image: factorhouse/kpow-ce
#    container_name: kpow
#    hostname: kpow
#    ports:
#      - "3000:3000"
#    environment:
#      BOOTSTRAP: broker-1:9092,broker-2:9092,broker-3:9092
#      SCHEMA_REGISTRY_URL: http://schema-registry:8081
#      CONNECT_REST_URL: http://connect-1:8083
#    depends_on:
#      broker-1:
#        condition: service_healthy
#      schema-registry:
#        condition: service_healthy
#      connect-1:
#        condition: service_healthy